정수형 변수(문자형), 실수형 변수

정수형
char : 1바이트 : -128 이상   +127 이하
short : 2바이트 : -32,768 이상   +32,767 이하
int : 4바이트 : -2,147,483,684 이상   +2,147,483,647 이하
long : 4바이트/8바이트 : -2,147,483,684 이상   +2,147,483,647 이하
long long : 8바이트 : -9,223,372,036,854,775,808 이상
                      +9,223,372,036,854,775,807이하
실수형
float : 4바이트 : +-3.4*10^-37 이상 +-3.4*10^+38 이하
double : 8바이트 : +-1.7*10^-307 이상 +-1.7*10^+308 이하
long double : 8바이트 이상 : double 이상의 표현 범위


배열
변수이름[변수의 개수]={넣을 값, 넣을 값...};
ex)
int arr[5]={1,2,3,4,5}

arr[0]|arr[1]|arr[2]|arr[3]|arr[4]
  1   |  2   |  3   |  4   |  5


배열을 2중으로 하여 2차원으로도 만들 수 있다
ex)
int arr[4][4]={
  {1,2,3,4},
  {5,6,7,8},
  {9,10,11,12},
  {13,14,15,16}
};


          arr[x][0]|arr[x][1]|arr[x][2]|arr[x][3]
arr[0][y]     1    |    2    |    3    |    4 
arr[1][y]     5    |    6    |    7    |    8 
arr[2][y]     9    |   10    |   11    |   12 
arr[3][y]    13    |   14    |   15    |   16 


포인터
자료형* 변수이름;
자료형 *변수이름;
값을 담아두는 변수가 아닌 저장된 주소를 담는 변수
예)
int* a,b,c; 일 경우 a만 포인터형 변수 b,c는 단순 변수
각각 선언하기 위해서는 int *a,*b,*c;로 선언해야한다

ex)
int foo = 3, *ptr;
ptr = &foo;		//ptr이 변수는 foo를 가리키게 설정되었음
*ptr = 5;		//그렇기에 ptr이 가리키는 foo의 값이 5로 설정
printf("%d", foo);	//그래서 foo를 출력시 5로 출력

출력 : 5 

포인터는 함수를 가리킬수도 있음
ex)
void hi(void) {
	printf("안녕하세요");
}

int main(void){
	void (*a)(void) = &hi; 		//포인터 a에 함수 hi의 주소를 지정
	(*a)(); 		//=hi();		//포인터 a를 실행
}

출력 : 안녕하세요
